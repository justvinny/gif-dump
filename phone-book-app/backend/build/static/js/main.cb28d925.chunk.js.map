{"version":3,"sources":["services/phoneBookService.js","components/AddNewContact.js","components/FilterName.js","components/Contact.js","components/SavedContacts.js","components/Dialog.js","App.js","index.js"],"names":["phoneBookService","getAllContacts","axios","get","then","response","data","addNewContact","newContact","post","deleteContact","id","delete","updateNumber","number","put","respsonse","AddNewContact","contacts","setContacts","dialogMsg","setDialogMsg","useState","name","setName","setNumber","showGoodDialogMsg","msg","good","Promise","resolve","reject","setTimeout","error","catch","console","log","showErrorDialogMsg","clearFields","handleChange","setState","event","target","value","className","onSubmit","preventDefault","some","contact","window","confirm","find","placeholder","onChange","type","FilterName","filterName","setFilterName","Contact","SavedContacts","map","onClick","filter","Dialog","App","useEffect","displayContacts","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb28d925.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst getAllContacts = () => {\r\n    return axios\r\n        .get(\"/api/persons\")\r\n        .then(response => response.data);\r\n}\r\n\r\nconst addNewContact = (newContact) => {\r\n    return axios\r\n        .post(\"/api/persons\", newContact)\r\n        .then(response => response.data);\r\n}\r\n\r\nconst deleteContact = (id) => {\r\n    return axios\r\n        .delete(`/api/persons/${id}`)\r\n        .then(response => response.data);\r\n}\r\n\r\nconst updateNumber = (id, number) => {\r\n    return axios\r\n        .put(`/api/persons/${id}`, {number})\r\n        .then(respsonse => respsonse.data);\r\n}\r\nconst phoneBookService = { getAllContacts, addNewContact, deleteContact, updateNumber }\r\n\r\nexport default phoneBookService;","import \"./AddNewContact.css\";\r\nimport { useState } from \"react\";\r\nimport phoneBookService from \"../services/phoneBookService\";\r\n\r\nconst AddNewContact = ({ contacts, setContacts, dialogMsg, setDialogMsg }) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n\r\n    const showGoodDialogMsg = (msg) => {\r\n        setDialogMsg({ ...dialogMsg, good: msg });\r\n\r\n        new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                setDialogMsg({ good: \"\", error: \"\" });\r\n                resolve(\"ok\");\r\n            }, 5000);\r\n        }).catch(error => console.log(error));\r\n    }\r\n    const showErrorDialogMsg = (msg) => {\r\n        setDialogMsg({ ...dialogMsg, error: `${msg}` });\r\n\r\n        new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                setDialogMsg({ good: \"\", error: \"\" });\r\n                resolve(\"ok\");\r\n            }, 5000);\r\n        }).catch(error => console.log(error));\r\n    }\r\n    const checkContactExists = () => contacts.some(contact => contact.name === name);\r\n    const clearFields = () => {\r\n        setName(\"\");\r\n        setNumber(\"\");\r\n    }\r\n    const addContact = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (name && number) {\r\n            if (checkContactExists()) {\r\n                let shouldUpdate = window.confirm(\"Are you sure you want to update number?\");\r\n\r\n                if (shouldUpdate) {\r\n                    const id = contacts.find(contact => contact.name === name).id;\r\n\r\n                    if (id) {\r\n                        phoneBookService\r\n                        .updateNumber(id, number)\r\n                        .then(data => {\r\n                            setContacts(data);\r\n                        })\r\n                        .then(() => {\r\n                            clearFields();\r\n                            showGoodDialogMsg(`Successfully updated number for ${name}`);\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                const newContact = { name, number };\r\n                phoneBookService.addNewContact(newContact)\r\n                    .then(data => {\r\n                        setContacts(data);\r\n                        clearFields();\r\n                        showGoodDialogMsg(`Successfully added ${name}`);\r\n                    })\r\n                    .catch(error => console.log(error));\r\n            }\r\n        } else if (!name) {\r\n            showErrorDialogMsg(\"Name must not be empty!\");\r\n        } else if (!number) {\r\n            showErrorDialogMsg(\"Number must not be empty!\");\r\n        }\r\n    }\r\n\r\n    const handleChange = (setState) => (event) => {\r\n        setState(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <h2>Add New Contact</h2>\r\n\r\n            <form className=\"contactInput\" onSubmit={addContact}>\r\n                <label>Name <input placeholder=\"Name\" value={name} onChange={handleChange(setName)}></input></label>\r\n                <label>Number <input placeholder=\"Number\" value={number} onChange={handleChange(setNumber)}></input></label>\r\n                <button type=\"submit\">Add</button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AddNewContact;","const FilterName = ({filterName, setFilterName}) => {\r\n    const handleChange = (event) => {\r\n        setFilterName(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <label>Filter shown with <input placeholder=\"e.g. Arto\" value={filterName} onChange={handleChange}></input></label>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default FilterName;","const Contact = ({name, number}) => {\r\n    return (\r\n        <p>{name} {number}</p>\r\n    )\r\n}\r\n\r\nexport default Contact;","import phoneBookService from \"../services/phoneBookService\";\r\nimport Contact from \"./Contact\";\r\n\r\nconst SavedContacts = ({ contacts, setContacts, dialogMsg, setDialogMsg }) => {\r\n\r\n    const deleteEvent = (name) => (event) => {\r\n        event.preventDefault();\r\n        let shouldDelete = window.confirm(`Are you sure you want to delete the contact ${name}?`);\r\n        if (shouldDelete) {\r\n            const id = contacts.find(contact => contact.name === name).id;\r\n            phoneBookService\r\n                .deleteContact(id)\r\n                .then(data => {\r\n                    setContacts([...contacts].filter(contact => contact.id !== id));\r\n                    setDialogMsg({...dialogMsg, good:`Successfully deleted ${name}`})\r\n                }).then(() => {\r\n                    setTimeout(() => {\r\n                        setDialogMsg({good:\"\", error:\"\"});\r\n                    }, 5000);\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <h2>Saved Contacts</h2>\r\n            {contacts.map(contact => (\r\n                <div className=\"contact\" key={contact.name + contact.number}>\r\n                    <Contact name={contact.name} number={contact.number} />\r\n                    <button onClick={deleteEvent(contact.name)}>Delete</button>\r\n                </div>\r\n            ))}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SavedContacts;","import \"./Dialog.css\";\r\n\r\nconst Dialog = ({dialogMsg}) => {\r\n    const {good, error} = dialogMsg;\r\n    const displayMsg = () => {\r\n        if (good) {\r\n            return <h2 className=\"dialogMsg\">{good}</h2>;\r\n        } else if (error) {\r\n            return <h2 className=\"errorMsg\">{error}</h2>;\r\n        } else {\r\n            return <></>\r\n        }\r\n    }\r\n\r\n\r\n    return displayMsg();\r\n}\r\n\r\nexport default Dialog;","import AddNewContact from \"./components/AddNewContact\";\nimport FilterName from \"./components/FilterName\";\nimport SavedContacts from \"./components/SavedContacts\";\nimport Dialog from \"./components/Dialog\";\nimport phoneBookService from \"./services/phoneBookService\";\nimport { useState, useEffect } from \"react\";\n\nconst App = () => {\n    // States\n    const [contacts, setContacts] = useState([]);\n    const [filterName, setFilterName] = useState(\"\");\n    const [dialogMsg, setDialogMsg] = useState({ good: \"\", error: \"\" });\n\n    // Use Effect hook\n    useEffect(() => {\n        phoneBookService\n            .getAllContacts()\n            .then(data => setContacts(data))\n            .catch(error => console.log(error));\n    }, []);\n\n    const displayContacts = contacts.filter(contact => contact.name.toLowerCase().includes(filterName.toLowerCase()));\n    return (\n        <>\n            <header>\n                <h1>Phonebook</h1>\n            </header>\n            <main>\n                <Dialog dialogMsg={dialogMsg} />\n                <FilterName filterName={filterName} setFilterName={setFilterName} />\n                <AddNewContact contacts={contacts} setContacts={setContacts} dialogMsg={dialogMsg} setDialogMsg={setDialogMsg} />\n                <SavedContacts contacts={displayContacts} setContacts={setContacts} dialogMsg={dialogMsg} setDialogMsg={setDialogMsg} />\n            </main>\n        </>\n    )\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}